generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          Role      @default(user)

  accounts Account[]
  chats    Chats[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  identifier String   @unique
  token      String
  expires    DateTime

  @@id([identifier])
}

model Chats {
  id          String       @id @default(uuid())
  userId      String
  title       String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  logMessages LogMessage[]

  user User @relation(fields: [userId], references: [id])
}

model LogMessage {
  id         String   @id @default(uuid())
  chatId     String
  messageIn  String
  messageOut String
  response   String
  tokenRead  Int
  tokenGen   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  chat       Chats    @relation(fields: [chatId], references: [id])
}
