generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          Role      @default(user)

  accounts Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  identifier String   @unique
  token      String
  expires    DateTime

  @@id([identifier])
}

model ChatTitle {
  id          String       @id @default(uuid())
  title       String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  logMessages LogMessage[]
}

model LogMessage {
  id          String    @id @default(uuid())
  userId      String
  chatTitleId String
  messageIn   String
  messageOut  String
  response    String
  tokenRead   Int
  tokenGen    Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  chatTitle   ChatTitle @relation(fields: [chatTitleId], references: [id])
}
